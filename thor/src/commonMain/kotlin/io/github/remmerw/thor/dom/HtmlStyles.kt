package io.github.remmerw.thor.dom

import cz.vutbr.web.css.NodeData

object HtmlStyles {
    fun cssProperties(nodeData: NodeData, elementImpl: ElementImpl) {
        cssProperty(nodeData, elementImpl, "azimuth")
        cssProperty(nodeData, elementImpl, "background")
        cssProperty(nodeData, elementImpl, "background-attachment")
        cssProperty(nodeData, elementImpl, "background-color")
        cssProperty(nodeData, elementImpl, "background-color")
        cssProperty(nodeData, elementImpl, "background-position")
        cssProperty(nodeData, elementImpl, "background-repeat")
        cssProperty(nodeData, elementImpl, "border")
        cssProperty(nodeData, elementImpl, "border-collapse")
        cssProperty(nodeData, elementImpl, "border-color")
        cssProperty(nodeData, elementImpl, "border-style")
        cssProperty(nodeData, elementImpl, "border-spacing")
        cssProperty(nodeData, elementImpl, "border-top")
        cssProperty(nodeData, elementImpl, "border-right")
        cssProperty(nodeData, elementImpl, "border-bottom")
        cssProperty(nodeData, elementImpl, "border-left")
        cssProperty(nodeData, elementImpl, "border-top-color")
        cssProperty(nodeData, elementImpl, "border-right-color")
        cssProperty(nodeData, elementImpl, "border-bottom-color")
        cssProperty(nodeData, elementImpl, "border-left-color")
        cssProperty(nodeData, elementImpl, "border-top-style")
        cssProperty(nodeData, elementImpl, "border-right-style")
        cssProperty(nodeData, elementImpl, "border-bottom-style")
        cssProperty(nodeData, elementImpl, "border-left-style")
        cssProperty(nodeData, elementImpl, "border-top-width")
        cssProperty(nodeData, elementImpl, "border-right-width")
        cssProperty(nodeData, elementImpl, "border-bottom-width")
        cssProperty(nodeData, elementImpl, "border-left-width")
        cssProperty(nodeData, elementImpl, "border-width")
        cssProperty(nodeData, elementImpl, "bottom")
        cssProperty(nodeData, elementImpl, "caption-side")
        cssProperty(nodeData, elementImpl, "clear")
        cssProperty(nodeData, elementImpl, "clip")
        cssProperty(nodeData, elementImpl, "color")
        cssProperty(nodeData, elementImpl, "content")
        cssProperty(nodeData, elementImpl, "couter-increment")
        cssProperty(nodeData, elementImpl, "couter-reset")
        cssProperty(nodeData, elementImpl, "cue")
        cssProperty(nodeData, elementImpl, "cue-after")
        cssProperty(nodeData, elementImpl, "cue-before")
        cssProperty(nodeData, elementImpl, "css-float")
        cssProperty(nodeData, elementImpl, "direction")
        cssProperty(nodeData, elementImpl, "display")
        cssProperty(nodeData, elementImpl, "elevation")
        cssProperty(nodeData, elementImpl, "empty-cells")
        cssProperty(nodeData, elementImpl, "float")
        cssProperty(nodeData, elementImpl, "font")
        cssProperty(nodeData, elementImpl, "font-family")
        cssProperty(nodeData, elementImpl, "font-size")
        cssProperty(nodeData, elementImpl, "font-adjust")
        cssProperty(nodeData, elementImpl, "font-stretch")
        cssProperty(nodeData, elementImpl, "font-style")
        cssProperty(nodeData, elementImpl, "font-variant")
        cssProperty(nodeData, elementImpl, "font-weight")
        cssProperty(nodeData, elementImpl, "height")
        cssProperty(nodeData, elementImpl, "left")
        cssProperty(nodeData, elementImpl, "letter-spacing")
        cssProperty(nodeData, elementImpl, "line-height")
        cssProperty(nodeData, elementImpl, "list-style")
        cssProperty(nodeData, elementImpl, "list-style-image")
        cssProperty(nodeData, elementImpl, "list-style-position")
        cssProperty(nodeData, elementImpl, "list-style-type")
        cssProperty(nodeData, elementImpl, "margin")
        cssProperty(nodeData, elementImpl, "margin-top")
        cssProperty(nodeData, elementImpl, "margin-right")
        cssProperty(nodeData, elementImpl, "margin-bottom")
        cssProperty(nodeData, elementImpl, "margin-left")
        cssProperty(nodeData, elementImpl, "marker-offset")
        cssProperty(nodeData, elementImpl, "marks")
        cssProperty(nodeData, elementImpl, "max-height")
        cssProperty(nodeData, elementImpl, "max-width")
        cssProperty(nodeData, elementImpl, "min-height")
        cssProperty(nodeData, elementImpl, "min-width")
        cssProperty(nodeData, elementImpl, "orphans")
        cssProperty(nodeData, elementImpl, "outline")
        cssProperty(nodeData, elementImpl, "outline-color")
        cssProperty(nodeData, elementImpl, "outline-style")
        cssProperty(nodeData, elementImpl, "outline-border")
        cssProperty(nodeData, elementImpl, "overflow")
        cssProperty(nodeData, elementImpl, "padding")
        cssProperty(nodeData, elementImpl, "padding-top")
        cssProperty(nodeData, elementImpl, "padding-right")
        cssProperty(nodeData, elementImpl, "padding-bottom")
        cssProperty(nodeData, elementImpl, "padding-left")
        cssProperty(nodeData, elementImpl, "page")
        cssProperty(nodeData, elementImpl, "page-break-after")
        cssProperty(nodeData, elementImpl, "page-break-before")
        cssProperty(nodeData, elementImpl, "page-break-inside")
        cssProperty(nodeData, elementImpl, "pause")
        cssProperty(nodeData, elementImpl, "pause-after")
        cssProperty(nodeData, elementImpl, "pause-before")
        cssProperty(nodeData, elementImpl, "pitch")
        cssProperty(nodeData, elementImpl, "pitchRange")
        cssProperty(nodeData, elementImpl, "play-during")
        cssProperty(nodeData, elementImpl, "position")
        cssProperty(nodeData, elementImpl, "quotes")
        cssProperty(nodeData, elementImpl, "richness")
        cssProperty(nodeData, elementImpl, "right")
        cssProperty(nodeData, elementImpl, "size")
        cssProperty(nodeData, elementImpl, "speak")
        cssProperty(nodeData, elementImpl, "speak-header")
        cssProperty(nodeData, elementImpl, "speak-numeral")
        cssProperty(nodeData, elementImpl, "speak-punctuation")
        cssProperty(nodeData, elementImpl, "speech-rate")
        cssProperty(nodeData, elementImpl, "stress")
        cssProperty(nodeData, elementImpl, "table-layout")
        cssProperty(nodeData, elementImpl, "text-align")
        cssProperty(nodeData, elementImpl, "text-decoration")
        cssProperty(nodeData, elementImpl, "text-indent")
        cssProperty(nodeData, elementImpl, "text-shadow")
        cssProperty(nodeData, elementImpl, "text-transform")
        cssProperty(nodeData, elementImpl, "top")
        cssProperty(nodeData, elementImpl, "unicode-bidi")
        cssProperty(nodeData, elementImpl, "vertical-align")
        cssProperty(nodeData, elementImpl, "visibility")
        cssProperty(nodeData, elementImpl, "voice-family")
        cssProperty(nodeData, elementImpl, "volume")
        cssProperty(nodeData, elementImpl, "white-space")
        cssProperty(nodeData, elementImpl, "widows")
        cssProperty(nodeData, elementImpl, "word-spacing")
        cssProperty(nodeData, elementImpl, "z-index")
    }

    private fun cssProperty(nodeData: NodeData, elementImpl: ElementImpl, attribute: String) {
        elementImpl.cssProperty(
            attribute,
            nodeData.getAsString(attribute, true)
        )
    }
}